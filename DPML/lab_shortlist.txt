T1: 2SAT, CNF
	- transformation x0 v x1 into -xo -> x1 or -x1 -> xo
	- implication graph (ref. constraint graph)
	- strongly connected component
Links:
	https://en.wikipedia.org/wiki/2-satisfiability
	https://infoarena.ro/problema/2sat (incl. coloring map problem)

Abstract:
	Solve 2SAT using graph algorithms. Reduce various problems to solving 2SAT.

T2: Zvon/Pandemic
	- probability/graphs related problem
	- markov chain/probability graph/transition matrix
	- strongly connected component
	- counting problem/solve standard linear eq. system
	- potentially a good toy problem to research consistency

Abstract:
	Given a network of people with nodes as people and edges representing the probability to pass on a rumour, identify the probability for any person to find out the rumour given a starting node.

T3: DeepCoder
	- ML, search, constraint solvers
	- DSL, program synthesis
Links:
	https://openreview.net/pdf?id=ByldLrqlx

Abstract:
	Using a DSL for writing problems working on simple arrays. Search for a program which satisfies input-output examples.

T4: Solar's Sketch/Template methods for Program Synthesis
	- focuses on search and constraint solvers
Links:
	https://people.csail.mit.edu/asolar/SynthesisCourse/TOC.htm

Abstract: TODO

T5: A backtracking problem
	- N Queens
	- Map Coloring
	- Timetable
	- Knights Problem
Links:
	https://people.eng.unimelb.edu.au/pstuckey/PPDP2013.pdf
	https://developers.google.com/optimization/cp/queens
	https://camo.ici.ro/journal/vol19/v19b11.pdf
	https://en.wikipedia.org/wiki/AC-3_algorithm
	https://www.cs.colostate.edu/~cs440/fall14/assignments/assignment4.pdf
	http://www.cs.toronto.edu/~fbacchus/Presentations/CSP-BasicIntro.pdf

Abstract: Constraint satisfaction + Transformations & isomorphism

Knights Problem

K: basic solution backtracking next 8 positions
KC: apply arc consistency to remove check on moves landing outside the board, build a constraint graph
KLA: lookahead technique, proritize search based on smallest width subtree

N Queens

Q: basic solution with validity check at the end
QV: validation at each step, path consistency (attack between placed queens)
QLA: lookahead validation at each step (at least one free cell on each remaining row)

T6: Multiple divisions awarding
	- backtracking
	- constraints
	- tricky problem once we dive into details

Abstract: Members of a tournament participate in several divisions, each with its prizes. Find an optimal way to distribute the prizes such that a member only receives prizes from one division, whichever is more favorable.

T7: Maximal common subgraph

Abstract (basic version): find a maximal common subgraph through backtracking. Nodes n1, n2, ... nN in the first graph. Nodes m1, m2, ..., mM in the second graph. The backtracking part consists of asigning labels for the values n1, n2, ..., nN. Asign 0 when a node is not part of the subgraph. Otherwise asign the associated node in the second graph. Unasigned labels from the second graph are not part of the subgraph. Constraints appear at the level of edges in the comon subgraph. Eg. if nodes A, B & C from the first graph (included in the subgraph) have edges A-B, A-C, (not B-C) then also the associated nodes A', B', C' from the second graph (included in the subgraph) must have the same edge relationships A'-B', A'-C', (not B'-C').

T8: Common subgraph applications in chemistry & genetics

Abstract: TODO